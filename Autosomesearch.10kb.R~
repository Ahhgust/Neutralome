source("lib/functions.R")
source("lib/single-chr.R")

# load compiled C routines.
dyn.load("c-routines/do_exp_sums.so")
dyn.load("c-routines/calc_rel_dist.so")

args <- commandArgs(T)

if (is.na(args[5]) ) stop("Gimme some parameters!")
par <- as.numeric (args[1:5])

exonBed = read.bed.gmap("primateElements.inProteinExon")
nonexonBed = read.bed.gmap("primateElements.nonProteinExon")

chroms <- c(
'1',
'2A',
'2B',
'3',
'4',
'5',
'6',
'7',
'8',
'9',
'10',
'11',
'12',
'13',
'14',
'15',
'16',
'17',
'18',
'19',
'20',
'21',
'22')

exonBedList = list()
nonexonBedList = list()
pidList = list()
posList = list()
x <- 1

for (i in chroms) {

    chrom = paste('chr', i, sep='')

    dataFile <- paste("10kb/", i, ".bed", sep='')
    tbl <- read.table(dataFile) 
    colnames(tbl) <- c('chrom', 'start', 'stop', 'piOfLocus', 'piLen', 'divOfLocus', 'dLen', 'cmStart', 'cmStop')
    tbl <- tbl[tbl$piLen >= 1000,]
    tbl <- tbl[tbl$dLen >= 1000,]
    tbl <- tbl[tbl$divOfLocus > 0.0,]
    tbl <- within(tbl, piD <- (piOfLocus/piLen)/(divOfLocus/dLen) )
    q <- quantile(tbl$piD, 0.999)

    tbl$cmStart <- tbl$cmStart * 1e6
    tbl$cmStop <- tbl$cmStop * 1e6
    tbl <- tbl[ tbl$piD <= q,]
    
    exonBedList[[x]] <- exonBed[exonBed$chrom == chrom,]
    nonexonBedList[[x]] <- nonexonBed[nonexonBed$chrom == chrom,]

    tbl <- tbl[tbl$cmStop < max(nonexonBedList[[x]]$gEnd) - 1e6,]
    tbl <- tbl[tbl$cmStart > min(nonexonBedList[[x]]$gStart) + 1e6,]
    tbl <- tbl[tbl$cmStop < max(exonBedList[[x]]$gEnd)-1e6,]
    tbl <- tbl[tbl$cmStart > min(exonBedList[[x]]$gStart)+1e6,]

    len <- length(tbl[,1])


    pidList[[x]] <- tbl$piD
    posList[[x]] <- ((tbl$cmStart + tbl$cmStop )/ 2)
    x <- x + 1
}

best2<- optim(par, function(y) { 
s <- 0
x <- 1
for (i in chroms) {
    s <- s + sum_sq_comb_gmap(posList[[x]], pidList[[x]], bed1=exonBedList[[x]], bed2=nonexonBedList[[x]], y, mult=T, max1=1e6,
max2=1e6,trunc=T)
    x <- x + 1
}

s
},
control=list(maxit=10000)
)


print( c(best2$value, best2$par, best2$convergence))

